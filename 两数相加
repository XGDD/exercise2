/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode cur = null;
        ListNode pre = l1;
        ListNode tail = l2;
        ListNode p = l1;
        ListNode first = null;//记录输出结果时的最后一个位置，若找错，结果会连同链表2的数据一起输出
        if(l1 == null){
            return l1;
        }
        if(l2 == null){
            return l2;
        }
        double num1 = pre.val;
        double num2 = tail.val;
        double i = 1.0;
        pre = pre.next;
        tail = tail.next;
        while(pre != null){
            num1 += pre.val * (Math.pow(10.0, i));
            pre = pre.next;
            p = p.next;
            i++;
        }
        double j = 1.0;
        while(tail != null){
            num2 += tail.val * (Math.pow(10.0, j));
            tail = tail.next;
            j++;
        }
        p.next = l2;//防止5+5链表1的长度是不够的，所以把链表2的长度也加上
        cur = l1;
        double result = num1 + num2;
        if((pre == null) && (tail == null) && (result == 0)){
            cur.val = 0;
            cur.next = null;
        }
        else{
            while(result != 0){
            double m = result % 10;
            if(l1 != null){
                l1.val = (int)m;
                first = l1;
                l1 = l1.next;
            }
            result = result / 10;
        }
        first.next = null;
        }
        return cur;
    }
}
