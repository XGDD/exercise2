罗马数字包含以下七种字符： I， V， X， L，C，D 和 M。

字符          数值
I             1
V             5
X             10
L             50
C             100
D             500
M             1000
例如， 罗马数字 2 写做 II ，即为两个并列的 1。12 写做 XII ，即为 X + II 。 27 写做  XXVII, 即为 XX + V + II 。

通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 IIII，而是 IV。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 IX。这个特殊的规则只适用于以下六种情况：

I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。
X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。 
C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。
给定一个整数，将其转为罗马数字。输入确保在 1 到 3999 的范围内。


示例 1:

输入: 3
输出: "III"
示例 2:

输入: 4
输出: "IV"
示例 3:

输入: 9
输出: "IX"
示例 4:

输入: 58
输出: "LVIII"
解释: L = 50, V = 5, III = 3.
示例 5:

输入: 1994
输出: "MCMXCIV"
解释: M = 1000, CM = 900, XC = 90, IV = 4.







class Solution {
    public String intToRoman(int num) {
         StringBuilder stringBuilder = new StringBuilder();
        while (num != 0){
            if(num / 1000 != 0){
                int max = num/1000;
                while(max-- != 0){
                    stringBuilder.append("M");
                }
                num %= 1000;
            }
            if(num / 900 != 0){
                stringBuilder.append("CM");
                num %= 900;
            }
            if(num / 800 != 0){
                stringBuilder.append("DCCC");
                num %= 800;
            }
            if(num / 700 != 0){
                stringBuilder.append("DCC");
                num %= 700;
            }
            if(num / 600 != 0){
                stringBuilder.append("DC");
                num %= 600;
            }
            if(num / 500 != 0){
                stringBuilder.append("D");
                num %= 500;
            }
            if(num / 400 != 0){
                stringBuilder.append("CD");
                num %= 400;
            }
            if(num / 300 != 0){
                stringBuilder.append("CCC");
                num %= 300;
            }
            if(num / 200 != 0){
                stringBuilder.append("CC");
                num %= 200;
            }
            if(num / 100 != 0){
                stringBuilder.append("C");
                num %= 100;
            }
            if(num / 90 != 0){
                stringBuilder.append("XC");
                num %= 90;
            }
            if(num / 80 != 0){
                stringBuilder.append("LXXX");
                num %= 80;
            }
            if(num / 70 != 0){
                stringBuilder.append("LXX");
                num %= 70;
            }
            if(num / 60 != 0){
                stringBuilder.append("LX");
                num %= 60;
            }
            if(num / 50 != 0){
                stringBuilder.append("L");
                num %= 50;
            }
            if(num / 40 != 0){
                stringBuilder.append("XL");
                num %= 40;
            }
            if(num / 30 != 0){
                stringBuilder.append("XXX");
                num %= 30;
            }
            if(num / 20 != 0){
                stringBuilder.append("XX");
                num %= 20;
            }
            if(num / 10 != 0){
                stringBuilder.append("X");
                num %= 10;
            }
            if(num / 9 != 0){
                stringBuilder.append("IX");
                num %= 9;
            }
            if(num / 8 != 0){
                stringBuilder.append("VIII");
                num %= 8;
            }
            if(num / 7 != 0){
                stringBuilder.append("VII");
                num %= 7;
            }
            if(num / 6 != 0){
                stringBuilder.append("VI");
                num %= 6;
            }
            if(num / 5 != 0){
                stringBuilder.append("V");
                num %= 5;
            }
            if(num / 4 != 0){
                stringBuilder.append("IV");
                num %= 4;
            }
            if(num / 3 != 0){
                stringBuilder.append("III");
                num %= 3;
            }
            if(num / 2 != 0){
                stringBuilder.append("II");
                num %= 2;
            }
            if(num / 1 != 0){
                stringBuilder.append("I");
                num %= 1;
            }
        }
        return stringBuilder.toString();
    }
}






改良版
class Solution {
    public String intToRoman(int num) {
        String result = "";
        int value[] = {1000,900,500,400,100,90,50,40,10,9,5,4,1};
        String string[] ={"M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I"};
        for(int i = 0; i < 13; i++){
            while(num >= value[i]){
                num -= value[i];
                result += string[i];
            }
        }
        return result;
    }
}











