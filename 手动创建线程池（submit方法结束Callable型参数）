import java.util.concurrent.*;

class MyThread implements Callable<String> {

    @Override
    public String call() {
        for(int i = 0; i < 10; i++){
            System.out.println(Thread.currentThread().getName()+"、"+i);
        }
        return Thread.currentThread().getName()+"执行结束";
    }
}

public class Test {
    public static void main(String[] args) {
        MyThread myThread = new MyThread();
        ExecutorService executorService = new ThreadPoolExecutor(3,5,
                2000,TimeUnit.MILLISECONDS,new LinkedBlockingDeque<>());
        for(int i = 0; i < 5; i++){
            Future future = executorService.submit(myThread);
            try {
                System.out.println(future.get());
            } catch (InterruptedException e) {
                e.printStackTrace();
            } catch (ExecutionException e) {
                e.printStackTrace();
            }
        }
        executorService.shutdown();
    }
}
